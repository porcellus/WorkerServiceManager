{"version":3,"file":"bundle.module.js","sources":["../src/PortHandler.ts","../src/serviceMap.ts","../src/remoteService.ts","../src/main.ts"],"sourcesContent":["export interface Port {\r\n    postMessage(data: any[], transfers?: any[])\r\n\r\n    onmessage: (event: MessageEvent) => void | Promise<void>\r\n}\r\n\r\nenum PortCommands {\r\n    call,\r\n    fire,\r\n    resolve,\r\n    reject,\r\n}\r\n\r\nclass DeferredPromise<T> {\r\n    promise: Promise<T>;\r\n    resolve: (value?: (PromiseLike<T> | T)) => void;\r\n    reject: (reason?: any) => void;\r\n\r\n    constructor(){\r\n        this.promise = new Promise((res, rej) => {\r\n            this.resolve = res;\r\n            this.reject = rej;\r\n        });\r\n    }\r\n}\r\n\r\nexport class PortHandler {\r\n    callHandler: (service, method, args) => Promise<any>;\r\n    deferreds: Map<number, DeferredPromise<any>>;\r\n    nextPid: number;\r\n\r\n    constructor(private port: Port) {\r\n        this.nextPid = 0;\r\n        this.deferreds = new Map<number, DeferredPromise<any>>();\r\n        this.callHandler = null;\r\n        this.port.onmessage = this.handleMessage.bind(this);\r\n    }\r\n\r\n    async call(service, method, args): Promise<any> {\r\n        const deferred = new DeferredPromise<any>();\r\n        const pid = this.nextPid++;\r\n        this.deferreds.set(pid, deferred);\r\n        this.port.postMessage([PortCommands.call, pid, service, method, args]);\r\n        return deferred.promise;\r\n    }\r\n\r\n    setCallHandler(handler) {\r\n        if(this.callHandler !== null)\r\n            throw new Error(\"Call handler already set\");\r\n        this.callHandler = handler;\r\n    }\r\n\r\n    fire(service, method, args): void {\r\n        this.port.postMessage([PortCommands.fire, service, method, args]);\r\n    }\r\n\r\n    private async handleMessage(ev) {\r\n        switch (ev.data[0]) { // cmd\r\n            case PortCommands.fire:\r\n                try {\r\n                    // We intentionally ignore the result (and even the errors) of the call. This is rarely a good idea,\r\n                    // but it is sometimes useful.\r\n                    //noinspection JSIgnoredPromiseFromCall\r\n                    this.callHandler(ev.data[2], ev.data[3], ev.data[4])\r\n                } catch (ex) {\r\n                    console.error(ex);\r\n                }\r\n                break;\r\n            case PortCommands.call:\r\n                try {\r\n                    const res = await this.callHandler(ev.data[2], ev.data[3], ev.data[4]);\r\n                    this.port.postMessage([PortCommands.resolve, ev.data[1], res]);\r\n                } catch(ex) {\r\n                    this.port.postMessage([PortCommands.reject, ev.data[1], ex]);\r\n                }\r\n                break;\r\n            case PortCommands.resolve:\r\n                this.deferreds.get(ev.data[1]).resolve(ev.data[2]);\r\n                break;\r\n            case PortCommands.reject:\r\n                this.deferreds.get(ev.data[1]).reject(ev.data[2]);\r\n                break;\r\n        }\r\n    }\r\n}","import {PortHandler} from \"./PortHandler\";\r\n\r\nexport class ServiceMap {\r\n    services: Map<string, any>;\r\n\r\n    constructor(){\r\n        this.services = new Map<string, any>();\r\n    }\r\n\r\n    addPort(port: any) {\r\n        const handler = new PortHandler(port);\r\n        handler.setCallHandler(this.handleCall.bind(this));\r\n        return handler;\r\n    }\r\n\r\n    addServiceObject(name, obj: any) {\r\n        return this.services.set(name, obj);\r\n    }\r\n\r\n    async handleCall(service: string, method: string, args: any[]) {\r\n        const serviceObj = this.services.get(service);\r\n        if(serviceObj !== undefined)\r\n            return await serviceObj[method](...args);\r\n\r\n        // We don't know about this service at all...\r\n        throw new Error(\"Service not found\")\r\n    }\r\n}","import {PortHandler} from \"./PortHandler\";\r\n\r\nexport class RemoteService {\r\n    name: string;\r\n    constructor(private port: PortHandler) {\r\n\r\n    }\r\n\r\n    async call(method, args) {\r\n        return await this.port.call(this.name, method, args);\r\n    }\r\n}","import {ServiceMap} from \"./serviceMap\";\r\n\r\nexport class main extends ServiceMap {\r\n    constructor(localServiceMap, remoteServiceMap) {\r\n        super();\r\n\r\n        localServiceMap.forEach((obj, name) =>\r\n            this.addServiceObject(name, obj)\r\n        );\r\n\r\n        remoteServiceMap.forEach((serviceProxyTypes, port) => {\r\n            const portHandler = this.addPort(port);\r\n\r\n            serviceProxyTypes.forEach(serviceProxyType => {\r\n                const proxy = new serviceProxyType(portHandler);\r\n                this.addServiceObject(proxy.name, proxy);\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nexport {RemoteService} from \"./remoteService\";"],"names":[],"mappings":"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"}